{"ast":null,"code":"var _class;\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HousingService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllProperties(SellRent) {\n    return this.http.get('data/properties.json').pipe(map(data => {\n      const propertiesArray = [];\n      for (let id in data) {\n        // @ts-ignore\n        if (data.hasOwnProperty(id) && data[id].SellRent === SellRent) {\n          // @ts-ignore\n          propertiesArray.push(data[id]);\n        }\n      }\n      return propertiesArray;\n    }));\n  }\n}\n_class = HousingService;\n_class.ɵfac = function HousingService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","HousingService","constructor","http","getAllProperties","SellRent","get","pipe","data","propertiesArray","id","hasOwnProperty","push","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sagar\\Desktop\\df\\dotnet projects\\real_estate\\client\\src\\app\\services\\housing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { IProperty } from '../property/IProperty.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  constructor(private http:HttpClient) { }\n\n  getAllProperties(SellRent: number): Observable<IProperty[]>{\n    return this.http.get('data/properties.json').pipe(\n      map(data => {\n        const propertiesArray: Array<IProperty> = [];\n        for(let id in data){\n            // @ts-ignore\n          if(data.hasOwnProperty(id) && data[id].SellRent === SellRent){\n            // @ts-ignore\n            propertiesArray.push(data[id]);\n          }\n        }\n        return propertiesArray;\n      }\n      )\n    )\n  }\n}\n"],"mappings":";AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAOpC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAACC,QAAgB;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAC/CP,GAAG,CAACQ,IAAI,IAAG;MACT,MAAMC,eAAe,GAAqB,EAAE;MAC5C,KAAI,IAAIC,EAAE,IAAIF,IAAI,EAAC;QACf;QACF,IAAGA,IAAI,CAACG,cAAc,CAACD,EAAE,CAAC,IAAIF,IAAI,CAACE,EAAE,CAAC,CAACL,QAAQ,KAAKA,QAAQ,EAAC;UAC3D;UACAI,eAAe,CAACG,IAAI,CAACJ,IAAI,CAACE,EAAE,CAAC,CAAC;;;MAGlC,OAAOD,eAAe;IACxB,CAAC,CACA,CACF;EACH;;SAnBWR,cAAc;;mBAAdA,MAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdf,MAAc;EAAAgB,OAAA,EAAdhB,MAAc,CAAAiB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}